package com.example.model;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Objects;

/*
–•—Ä–∞–Ω–∏—Ç —Ç–∏–ø –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ó–∞–≤—Ç—Ä–∞–∫")
–°–æ–¥–µ—Ä–∂–∏—Ç –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –±–ª—é–¥ (List<Dish>)
–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å—É–º–º–∞—Ä–Ω–æ–µ –ö–ë–ñ–£
–í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ
 */

public class Meal {
	private final String type; // –¢–∏–ø –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏: –∑–∞–≤—Ç—Ä–∞–∫, –æ–±–µ–¥ –∏ —Ç.–¥.
	private final List<Dish> dishes = new ArrayList<>(); // –ë–ª—é–¥–∞, –≤—Ö–æ–¥—è—â–∏–µ –≤ —ç—Ç–æ—Ç –ø—Ä–∏—ë–º –ø–∏—â–∏
	
	/**
	 * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
	 * @param type ‚Äî —Ç–∏–ø –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ó–∞–≤—Ç—Ä–∞–∫")
	 */
	public Meal(String type) {
		this.type = type;
	}
	
	/**
	 * –î–æ–±–∞–≤–ª—è–µ—Ç –±–ª—é–¥–æ –≤ –ø—Ä–∏—ë–º –ø–∏—â–∏
	 * @param dish ‚Äî –±–ª—é–¥–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã –µ—à—å –Ω–∞ —ç—Ç–æ–º –ø—Ä–∏—ë–º–µ –ø–∏—â–∏
	 */
	public void addDish(Dish dish) {
		dishes.add(dish);
	}
	
	/**
	 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±–ª—é–¥
	 * @return –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–π —Å–ø–∏—Å–æ–∫ –±–ª—é–¥
	 */
	public List<Dish> getDishes() {
		return Collections.unmodifiableList(dishes);
	}
	
	/**
	 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–∏–ø –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏
	 */
	public String getType() {
		return type;
	}
	
	/**
	 * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–ª–æ—Ä–∏–π –≤—Å–µ—Ö –±–ª—é–¥
	 */
	public double getTotalCalories() {
		double total = 0.0;
		for (Dish dish : dishes) {
			total += dish.getCalories();
		}
		return total;
	}
	
	/**
	 * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–µ–ª–∫–æ–≤ –≤—Å–µ—Ö –±–ª—é–¥
	 */
	public double getTotalProteins() {
		double total = 0.0;
		for (Dish dish : dishes) {
			total += dish.getProteins();
		}
		return total;
	}
	
	/**
	 * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∏—Ä–æ–≤ –≤—Å–µ—Ö –±–ª—é–¥
	 */
	public double getTotalFats() {
		double total = 0.0;
		for (Dish dish : dishes) {
			total += dish.getFats();
		}
		return total;
	}
	
	/**
	 * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≥–ª–µ–≤–æ–¥–æ–≤ –≤—Å–µ—Ö –±–ª—é–¥
	 */
	public double getTotalCarbs() {
		double total = 0.0;
		for (Dish dish : dishes) {
			total += dish.getCarbs();
		}
		return total;
	}
	
	/**
	 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–∏—ë–º–µ –ø–∏—â–∏
	 */
	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("üçΩ ").append(type).append(": ")
				.append(String.format("%.0f –∫–∫–∞–ª / %.0f –≥ –ë / %.0f –≥ –ñ / %.0f –≥ –£%n",
						getTotalCalories(), getTotalProteins(), getTotalFats(), getTotalCarbs()));
		
		sb.append("–ë–ª—é–¥–∞:%n");
		for (Dish dish : dishes) {
			sb.append(" - ").append(dish.toString()).append("%n");
		}
		
		return sb.toString();
	}
}